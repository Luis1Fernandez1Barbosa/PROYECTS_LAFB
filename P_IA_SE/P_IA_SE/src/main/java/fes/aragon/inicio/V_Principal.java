/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fes.aragon.inicio;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author LAFB2000
 */
public class V_Principal extends javax.swing.JFrame {

    /**
     * Creates new form V_Principal
     */
    public V_Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rBInterFuerza = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rBFormMateria = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setText("#Barionico (B): Número cuantico aditivivo (que se suma) referente a las \"leyes de conservacion\" de la simetria de una particula.");

        jLabel10.setText("Distancia de alcance de la partícula: Rango de distancia donde la afluencia (campo) de la partícula  interaccionan con las demas.");

        jLabel9.setText("Espín: Propiedad física e intrínseca de la particula que explica el  movimiento angular de rotación de la misma.");

        jLabel8.setText("Electronvoltio(eV): Unidad de energia que significa la variacion de energia de un electron en una diferencia de potencial (voltaje) de 1 [V].");

        jLabel7.setText("Masa (m): Según la ley E=mc^2, donde se expresa la masa  en relacion con la energia. Se concluye que la masa es la energia necesitada para la creación de la particula.");

        jLabel6.setText("Carga electrica (Q): Propiedad intrínseca de la particula que describe su comportamiento en interacción con otra a través de un campo electromagnetico.");

        jLabel5.setText("Categoria: Las partículas formadoras de materia se clasifican en tres categorias segun la masa con la que cuentan, siendo las de masa ligera, masa media, y masa pesada.");

        jLabel4.setText("Formadores de Materia: En relacion entre ellas crean toda sustancia tangible; más no lo son, y  es donde se puede identificar la acción de las fuerzas fundamentales.");

        jLabel3.setText("Interaccion de fuerzas fundamentales: Generan todas las acciones para el constante movimiento de energia (gravedad, electromagnetismo, nuclear debil y nuclear fuerte).");

        buttonGroup1.add(rBInterFuerza);
        rBInterFuerza.setText("Interacciones fundamentales");

        jLabel2.setText("Las particulas elementales se ha dividido en dos, las que pueden formar materia y las mediadoras de las interacciones (fuerzas) fundamentales del universo. ");

        jLabel1.setText("PARTÍCULAS ELEMENTALES");

        buttonGroup1.add(rBFormMateria);
        rBFormMateria.setText("Formadores de materia");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel12.setText("Resultado y selección de opciones:");

        jLabel13.setText("Complemento de conocimiento:");

        jButton1.setText("Comenzar>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jLabel11)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(87, 87, 87)
                            .addComponent(rBInterFuerza)
                            .addGap(164, 164, 164)
                            .addComponent(rBFormMateria))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 518, Short.MAX_VALUE)
                            .addComponent(jButton2)
                            .addGap(36, 36, 36))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(149, 149, 149))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rBInterFuerza)
                    .addComponent(rBFormMateria))
                .addGap(9, 9, 9)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(35, 35, 35)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//-----------------CLASE PARA LECTURA DE ARCHIVO COMPLEMENTARIO(Base de Conocimiento)-----------------------------------
    public void LeerArc(String pat) {
        String path = new String(pat); //String del nombre del archivo
        //Llamada del archivo
        File archivo = new File(System.getProperty("user.dir") + ("/src/main/java/fes/aragon/recursos/" + pat));
        try {
            //Scanner input = new Scanner(new File(System.getProperty("user.dir") + ("\\src\\main\\java\\fes\\aragon\\recursos\\" + path)));
            //Lectura del archivo
            BufferedReader leer =new BufferedReader(new FileReader(archivo));
            String linea=leer.readLine();
            while (linea != null){//input.hasNextLine()) {
                //String line = input.nextLine();
                jTextArea2.append(linea+"\n");//setText(input.nextLine());
                linea =leer.readLine();
                //System.out.println(line);              
            }
            //input.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
//-----------------------------------------------------------------------------------------------------------------------  

//---------------------CLASES DE INTERACCION DE FUERZAS--------------------------------------------
    //Clase void de la masa de los interactores de fuerzas
    private void V_BosonesMasa() {
        jTextArea1.setText("");
        jTextArea2.setText("");
        //Masas;  
        String mFer0 = "0 MeV/c^2";
        String mFer1 = "80.4 MeV/c^2";
        String mFer2 = "91.6 MeV/c^2";
        //Arreglo de opciones con ventana 
        String[] values = {mFer0, mFer1, mFer2};
        Object selected = JOptionPane.showInputDialog(null, "¿Cuánta masa tiene la partícula?", "SELECCIONAR LA MASA DE PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mFer0) {    //Masa=0
            V_BosonesAlc(); //Llamada a metodo para seleccion de alcance
            System.out.println("Se eligió masa 0 MeV/c^2");
        } else if (selected == mFer1) { //Masa= 80.4
            jTextArea1.setText("La partícula correspondiente es: W+ (bosón W+)\n\n"
                    + "\t-Se eligió partícula de interracción de fuerzas fundamentales (BOSONES)\n"
                    + "\t-Se eligió masa: 80.4 MeV/c^2");
            System.out.println("W+ (bosón W+)");
            LeerArc("comp_W.txt"); //Lectura de archivo txt de complemento 
        } else if (selected == mFer2) { //Masa=91.6
            jTextArea1.setText("La partícula correspondiente es: Z (boson Z)\n\n"
                    + "\t-Se eligió partícula de interracción de fuerzas fundamentales (BOSONES)\n"
                    + "\t-Se eligió masa: 91.6 MeV/c^2");
            System.out.println("Z (boson Z)");
            LeerArc("comp_Z.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//-----------------------------------------------------------------------------------------------------

    //Clase void del alcance de los interactores de fuerzas con m=0
    private void V_BosonesAlc() {
        //Alcances
        String alInf = "Infinito";
        String alGlu = "10^-13 cm";
        //Arreglo de opciones con ventana
        String[] values = {alInf, alGlu};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué alcance tiene la partícula?", "SELECCIONAR EL ALCANCE DE PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de alcance
        if (selected == alInf) { //Alcance=infinito
            V_BosonesEsp(); //Llamada a metodo para seleccion de espín
            System.out.println("Se eligió alcance INFINITO");
        } else if (selected == alGlu) { //Alcance=10^-13 cm
            jTextArea1.setText("La partícula correspondiente es: GLUON (g)\n\n"
                    + "\t-Se eligió partícula de interracción de fuerzas fundamentales (BOSONES)\n"
                    + "\t-Se eligió masa: 0 MeV/c^2\n"
                    + "\t-Se eligió distancia de alcance de: 10^-13 cm");
            System.out.println("GLUON (g)");
            LeerArc("comp_g.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//-----------------------------------------------------------------------------------------------------

    //Clase void del espín de los interactores de fuerzas con m=0; d=infinito
    private void V_BosonesEsp() {
        //Espín
        String sFot = "1";
        String sGrav = "2";
        //Arreglo de opciones con ventana
        String[] values = {sFot, sGrav};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué espín tiene?", "SELECCIONAR EL ESPÍN DE PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de espín
        if (selected == sFot) { //Espín=1
            jTextArea1.setText("La partícula correspondiente es un: FOTÓN (λ)\n\n"
                    + "\t-Se eligió partícula de interracción de fuerzas fundamentales (BOSONES)\n"
                    + "\t-Se eligió masa: 0 MeV/c^2\n"
                    + "\t-Se eligió distancia de alcance de: Infinito\n"
                    + "\t-Se eligió espín: 1");
            System.out.println("FOTON (λ)");
            LeerArc("comp_F.txt"); //Lectura de archivo txt de complemento
        } else if (selected == sGrav) { //Espín=2
            jTextArea1.setText("La partícula correspondiente es un: GRAVITON (matemáticamente hipotético)\n\n"
                    + "\t-Se eligio partícula de interracción de fuerzas fundamentales (BOSONES)\n"
                    + "\t-Se eligio masa: 0 MeV/c^2\n"
                    + "\t-Se eligio distancia de alcance de: Infinito\n"
                    + "\t-Se eligio espin: 2");
            System.out.println("GRAVITON (matemáticamente hipotético)");
            LeerArc("comp_Gr.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//-------------------------------------------------------------------------------------------------------------

//---------------------CLASES FORMADORES DE MATERIA-----------------------------------------------------------
    //Clase void de categoria de Formadores de Materia
    private void V_CatForM() {
        jTextArea1.setText("");
        jTextArea2.setText("");
        //Categorias  
        String Cat0 = "Ligeros (Leptones)";
        String Cat1 = "Medianos (Mesones)";
        String Cat2 = "Pesados (Bariones)";
        //Arreglo de opciones y ventana
        String[] values = {Cat0, Cat1, Cat2};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué clasificación (respecto a su masa) eliges?", "SELECCIONAR LA CLASIFICACIÓN", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de categoría
        if (selected == Cat0) { //Categoria=Leptones
            V_CargaLep(); //Llamada a metodo para seleccion de carga electrica-leptones
            System.out.println("Se eligió categoría LEPTONES");
        } else if (selected == Cat1) { //Categoria=Mesones
            V_NoBar(); //Llamada a metodo para seleccion de #barionico-mesones
            System.out.println("Se eligió categoría MESONES");
        } else if (selected == Cat2) { //Categoria=Bariones
            V_CargaBar(); //Llamada a metodo para seleccion de carga electrica-bariones
            System.out.println("Se eligió categoría BARIONES");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//-------------------------------------------------------------------------------------------------------------

//************************LEPTONES---------------------------------------------------------------------------  
    //Clase void de carga electrica(Q)-leptones
    private void V_CargaLep() {
        //Carga electrica (Q)
        String Q0 = "0";
        String Qm1 = "-1";
        //Arreglo de opciones y ventana
        String[] values = {Q0, Qm1};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué carga eléctrica(Q) tiene la partícula?", "SELECCIONAR LA CARGA ELÉCTRICA(Q)", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de carga electrica
        if (selected == Qm1) { //Q=-1
            V_MasaLepQm1();  //Llamada a metodo para seleccion de masa-leptones-Q=-1-leptones
            System.out.println("Se eligió Q=-1");
        } else if (selected == Q0) { //Q=0
            V_MasaLepQ0(); //Llamada a metodo para seleccion de masa-leptones-Q=0-leptones
            System.out.println("Se eligió Q=0");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//-------------------------------------------------------------------------------------------------------------

    //Clase void de masa(M) con Q=0-leptones
    private void V_MasaLepQ0() {
        //Masas
        String mNelec = "3x10^-6 MeV/c^2";
        String mNmuon = "<0.19 MeV/c^2";
        String mNtauon = "<18.2 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mNelec, mNmuon, mNtauon};
        Object selected = JOptionPane.showInputDialog(null, "¿Cuánta masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mNelec) { //Masa=3x10^-6 MeV/c^2
            jTextArea1.setText("La particula correspondiente es un: NEUTRINO ELECTRONICO (Ve)\n\n"
                    + "\t-Se eligió particula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 3x10^-6 MeV/c^2");
            System.out.println("NEUTRINO ELECTRONICO (Ve)");
            LeerArc("comp_ve.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mNmuon) { //Masa=<0.19 MeV/c^2
            jTextArea1.setText("La particula correspondiente es un: NEUTRINO MUONICO (Vμ)\n\n"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: <0.19 MeV/c^2");
            System.out.println("NEUTRINO MUONICO (Vμ)");
            LeerArc("comp_vM.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mNtauon) { //Masa=<18.2 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es un: NEUTRINO TAUONICO (Vτ)\n\n"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoria de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: <18.2 MeV/c^2");
            System.out.println("NEUTRINO TAUONICO (Vτ)");
            LeerArc("comp_vT.txt"); //Lectura de archivo txt de complemento
        } else {  //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa(M) con Q=-1-leptones
    private void V_MasaLepQm1() {
        //Masas
        String mElec = "0.51 MeV/c^2";
        String mMuon = "105.7 MeV/c^2";
        String mTauon = "1777 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mElec, mMuon, mTauon};
        Object selected = JOptionPane.showInputDialog(null, "¿Cuánta masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mElec) { //Masa=0.51 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es un: ELECTRÓN (e)\n\n"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): -1\n"
                    + "\t-Se eligió masa de: 0.51 MeV/c^2");
            System.out.println("ELECTRÓN (e)");
            LeerArc("comp_e.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mMuon) { //Masa=105.7 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es un: MUON (μ)\n\n"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): -1\n"
                    + "\t-Se eligió masa de: 105.7 MeV/c^2");
            System.out.println("MUON (μ)");
            LeerArc("comp_M.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mTauon) {//Masa=1777 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es un: TAUÓN (τ)\n\n"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de ligeros (LEPTONES)\n"
                    + "\t-Se eligió carga eléctrica(Q): -1\n"
                    + "\t-Se eligió masa de: 1777 MeV/c^2");
            System.out.println("TAUÓN (τ)");
            LeerArc("comp_T.txt"); //Lectura de archivo txt de complemento
        } else {  //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

//************************MESONES--------------------------------------------------------------------------------
    //Clase void de # Barionico de -mesones
    private void V_NoBar() {
        //Numeros barionicos
        String nBar0 = "0";
        String nBarN = "Nulo";
        //Arreglo de opciones y ventana
        String[] values = {nBar0, nBarN};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué número bariónico tiene la partícula?", "SELECCIONAR EL # BARIÓNICO DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de #barionico
        if (selected == nBar0) {//#B=0
            V_CargaMesB0();//Llamada a metodo para seleccion de carga eléctrica ; #B=0-mesones
            System.out.println("#B = 0");
        } else if (selected == nBarN) { //#B=nulo
            V_CargaMesBn(); //Llamada a metodo para seleccion de carga eléctrica ; #B=nulo-mesones
            System.out.println("#B = nulo");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de carga eléctrica(Q) con #B=0-mesones
    private void V_CargaMesB0() {
        //Cargas electricas(Q)
        String Q1 = "+1";
        String Qm1 = "-1";
        String Q0 = "0";
        //Arreglo de opciones y ventana
        String[] values = {Q1, Qm1, Q0};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué carga eléctrica tiene la partícula?", "SELECCIONAR LA CARGA ELÉCTRICA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de Q
        if (selected == Q1) { //Q=1
            jTextArea1.setText("La partícula correspondiente es un: PION POSITIVO(π+)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número barionico: 0\n"
                    + "\t-Se eligió carga eléctrica(Q): +1");
            System.out.println("PION POSITIVO(π+)");
            LeerArc("comp_PiM.txt"); //Lectura de archivo txt de complemento
        } else if (selected == Qm1) { //Q=-1
            jTextArea1.setText("La partícula correspondiente es un: KAON NEGATIVO(K-)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: 0\n"
                    + "\t-Se eligió carga eléctrica(Q): -1");
            System.out.println("KAON NEGATIVO(K-)");
            LeerArc("comp_Km.txt"); //Lectura de archivo txt de complemento
        } else if (selected == Q0) { //Q=0
            V_MasaMesoQ0(); //Llamada a metodo para seleccion de masa ; Q=0-#B=0-mesones
            System.out.println("Q = 0");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=0-#B=0-mesones
    private void V_MasaMesoQ0() {
        //Masas
        String mN = "547.3 MeV/c^2";
        String mPiN = "135 MeV/c^2";
        String mKN = "497.7 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mN, mPiN, mKN};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masas
        if (selected == mN) { //Masa=547.3 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: ETA (η)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: 0\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 547.3 MeV/c^2");
            LeerArc("comp_eta.txt"); //Lectura de archivo txt de complemento
            System.out.println("ETA (η)");
        } else if (selected == mPiN) { //Masa=135 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: PION NEUTRO (π°)\n\n"
                    + "\t-Se eligió particula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: 0\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 135 MeV/c^2");
            System.out.println("PION NEUTRO (π°)");
            LeerArc("comp_Pi0.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mKN) { //Masa=497.7 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: KAON NEUTRO(K°)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: 0\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 497.7 MeV/c^2");
            System.out.println("KAON NEUTRO(K°)");
            LeerArc("comp_K0.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de carga eléctrica(Q) con #B=nulo-mesones
    private void V_CargaMesBn() {
        //Carga electrica (Q)
        String Qm1 = "-1";
        String Q0 = "0";
        //Arreglo de opciones y ventana
        String[] values = {Qm1, Q0};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué carga eléctrica tiene la partícula?", "SELECCIONAR LA CARGA ELÉCTRICA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de Q
        if (selected == Qm1) { //Q=-1
            V_MasaMesoQm1();//Llamada a metodo para seleccion de masa ; Q=-1-#B=nulo-mesones
            System.out.println("Q = -1");
        } else if (selected == Q0) { //Q=0
            V_MasaMesoQ0E();//Llamada a metodo para seleccion de masa ; Q=0-#B=nulo-mesones
            System.out.println("Q = 0");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=-1-#B=nulo-mesones
    private void V_MasaMesoQm1() {
        //Masa
        String mD = "1869.3 MeV/c^2";
        String mB = "5279 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mD, mB};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mD) { //Masa=1869.3 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: D NEGATIVA (D-)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoria de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: nulo\n"
                    + "\t-Se eligió carga eléctrica(Q): -1\n"
                    + "\t-Se eligió masa de: 1869.3 MeV/c^2");
            System.out.println("D-");
            LeerArc("comp_Dm.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mB) { //Masa=5279 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: antiparticula B NEGATIVA (B'-)\n\n"
                    + "\t-Se elegió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: nulo\n"
                    + "\t-Se eligió carga eléctrica(Q): -1\n"
                    + "\t-Se eligió masa de: 5279 MeV/c^2");
            System.out.println("B'-");
            LeerArc("comp_Bm.txt"); //Lectura de archivo txt de complemento
        } else {//Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=0-#B=nulo-mesones
    private void V_MasaMesoQ0E() {
        //Masa
        String mDn = "1864.5 MeV/c^2";
        String mJ = "3097 MeV/c^2";
        String mY = "9460 MeV/c^2";
        String mBn = "5279.4 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mDn, mJ, mY, mBn};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mBn) { //Masa=5279.4 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: B NEUTRA (B°)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: nulo\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 5279.4 MeV/c^2");
            System.out.println("B°");
            LeerArc("comp_B0.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mY) { //Masa=9460 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: UPSILON (Y)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: nulo\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 9460 MeV/c^2");
            System.out.println("Y");
            LeerArc("comp_Y.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mJ) { //Masa=3097 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: J/ψ\n\n"
                    + "\t-Se elegió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligio la categoría de medianos (MESONES)\n"
                    + "\t-Se eligio número bariónico: nulo\n"
                    + "\t-Se eligio carga eléctrica(Q): 0\n"
                    + "\t-Se eligio masa de: 3097 MeV/c^2");
            System.out.println("J/ψ");
            LeerArc("comp_psi.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mDn) { //Masa=1864.5 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: D NEUTRA (D°)\n\n"
                    + "\t-Se eligió partícula formadora de materia (BOSONES)\n"
                    + "\t-Se eligió la categoría de medianos (MESONES)\n"
                    + "\t-Se eligió número bariónico: nulo\n"
                    + "\t-Se eligió carga eléctrica(Q): 0\n"
                    + "\t-Se eligió masa de: 1864.5 MeV/c^2");
            System.out.println("D°");
            LeerArc("comp_D0.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

//************************BARIONES---------------------------------------------------------------------------
    //Clase void de carga eléctrica (Q) -bariones
    private void V_CargaBar() {
        //Cargas
        String Q1 = "+1";
        String Qm1 = "-1";
        String Q0 = "0";
        //Arreglo de opciones y ventana
        String[] values = {Q1, Qm1, Q0};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué carga eléctrica tiene la partícula?", "SELECCIONAR LA CARGA ELECTRICA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de Q
        if (selected == Q1) { //Q=1
            V_MasaBarQ1(); //Llamada a metodo para seleccion de masa ; Q=1-bariones
            System.out.println("Se eligio carga eléctrica = +1");
        } else if (selected == Qm1) { //Q=-1
            V_MasaBarQm1(); //Llamada a metodo para seleccion de masa ; Q=-1-bariones
            System.out.println("Se eligio carga eléctrica = -1");
        } else if (selected == Q0) { //Q=0
            V_MasaBarQ0(); //Llamada a metodo para seleccion de masa ; Q=0-bariones
            System.out.println("Se eligio carga eléctrica = 0");
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=1-bariones
    private void V_MasaBarQ1() {
        //Masas
        String mProt = "938.3 MeV/c^2";
        String mSigM = "1189.4 MeV/c^2";
        String mLamM = "2285 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mProt, mSigM, mLamM};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mProt) { //Masa=938.3 MeV/c^2
            jTextArea1.setText("La particula correspondiente es: PROTÓN (p)"
                    + "\t-Se eligió partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: +1\n"
                    + "\t-Se eligió masa: 938.3 MeV/c^2");
            System.out.println("PROTON (p)");
            LeerArc("comp_p.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mSigM) { //Masa=1189.4 MeV/c^2
            jTextArea1.setText("La particula correspondiente es: SIGMA POSITIVA (Σ+)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: +1\n"
                    + "\t-Se eligió masa: 1189.4 MeV/c^2");
            System.out.println("SIGMA POSITIVA (Σ+)");
            LeerArc("comp_SM.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mLamM) { //Masa=2285 MeV/c^2
            jTextArea1.setText("La particula correspondiente es: LAMBDA POSITIVA (Λ+)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: +1\n"
                    + "\t-Se eligió masa: 2285 MeV/c^2");
            System.out.println("LAMBDA POSITIVA (Λ+)");
            LeerArc("comp_LM.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=-1-bariones
    private void V_MasaBarQm1() {
        //Masas
        String mSigm = "1197.4 MeV/c^2";
        String mXi = "1321.3 MeV/c^2";
        String mOmg = "1672.4 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mSigm, mXi, mOmg};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene la partícula?", "SELECCIONAR LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mSigm) { //Masa=1197.4 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: SIGMA NEGATIVA (Σ-)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: -1\n"
                    + "\t-Se eligió masa: 1197.4 MeV/c^2");
            System.out.println("SIGMA NEGATIVA (Σ-)");
            LeerArc("comp_Sn.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mXi) { //Masa=1321.3 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: XI NEGATIVO (Ξ-)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: -1\n"
                    + "\t-Se eligió masa: 1321.3 MeV/c^2");
            System.out.println("XI NEGATIVO (Ξ-)");
            LeerArc("comp_Xim.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mOmg) { //Masa=1672.4 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: OMEGA NEGATIVA (Ω-)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: -1\n"
                    + "\t-Se eligió masa: 1672.4 MeV/c^2");
            System.out.println("OMEGA NEGATIVA (Ω-)");
            LeerArc("comp_Om.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //Clase void de masa con Q=0-bariones
    private void V_MasaBarQ0() {
        //Masas
        String mLam = "1115.7 MeV/c^2";
        String mNeu = "939.6 MeV/c^2";
        String mSig = "1192.6 MeV/c^2";
        String mXi = "1314.8 MeV/c^2";
        //Arreglo de opciones y ventana
        String[] values = {mLam, mNeu, mSig, mXi};
        Object selected = JOptionPane.showInputDialog(null, "¿Qué masa tiene?", "SELECCIONA LA MASA DE LA PARTÍCULA", JOptionPane.DEFAULT_OPTION, null, values, "0");
        //Reglas de produccion para seleccion de masa
        if (selected == mLam) { //Masa= 1115.7 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: LAMBDA NEUTRA (Λ°)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: 0\n"
                    + "\t-Se eligió masa: 1115.7 MeV/c^2");
            System.out.println("LAMBDA NEUTRA (Λ°)");
            LeerArc("comp_L0.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mNeu) { //Masa= 939.6 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: NEUTRÓN (n)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: 0\n"
                    + "\t-Se eligió masa: 939.6 MeV/c^2");
            System.out.println("NEUTRÓN (n)");
            LeerArc("comp_n.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mSig) { //Masa= 1192.6 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: SIGMA NEUTRO (Σ°)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: 0\n"
                    + "\t-Se eligió masa: 1192.6 MeV/c^2");
            System.out.println("SIGMA NEUTRO (Σ°)");
            LeerArc("comp_S0.txt"); //Lectura de archivo txt de complemento
        } else if (selected == mXi) { //Masa= 1314.8 MeV/c^2
            jTextArea1.setText("La partícula correspondiente es: XI NEUTRO (Ξ°)\n\n"
                    + "\t-Se elegio partícula formadora de materia (FERMIONES)\n"
                    + "\t-Se eligió la categoría de pesados (BARIONES)\n"
                    + "\t-Se eligió carga eléctrica: 0"
                    + "\t-Se eligió masa: 1314.8 MeV/c^2");
            System.out.println("XI NEUTRO (Ξ°)");
            LeerArc("comp_Xi0.txt"); //Lectura de archivo txt de complemento
        } else { //Cancela seleccion
            jTextArea1.setText("SELECCIÓN CANCELADA\n***Comience de nuevo***");
            jTextArea2.setText("");
            System.out.println("Se cancelo selección");
        }
    }
//----------------------------------------------------------------------------------------------------------------

    //***************************************************************************    
    //Clase void para la llamada de metodos con jButton
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Regla de producción para la seleccion del radioButton
        if (rBInterFuerza.isSelected()) {
            V_BosonesMasa();//Llamar al método Interactores de fuerzas 
        } else if (rBFormMateria.isSelected()) {
            V_CatForM(); //Llamar al método Formadores de materia
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       JOptionPane.showMessageDialog(null, "Este sistema se hizo de manera general, ya que cada partícula varia conforme a los experimentos \nLa subdivisión de estas"
               + " no se toma en cuenta.\nSe excluyeron las resonancias, y se omiten generalmente las antiparticulas de cada una.","INFORMACIÓN GENERAL", HEIGHT); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new V_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JRadioButton rBFormMateria;
    private javax.swing.JRadioButton rBInterFuerza;
    // End of variables declaration//GEN-END:variables
}
